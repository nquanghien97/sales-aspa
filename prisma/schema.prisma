generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum FILE_CATEGORY {
  SALES_POLICY
  PRODUCTS
  PRODUCT_DOCUMENTS
  FEEDBACKS
}

enum FILE_TYPE {
  image
  video
  pdf
}

model files {
  id               Int              @id @default(autoincrement())
  url              String           @db.LongText
  type             FILE_TYPE
  fileName         String?
  fileCategorySlug String?
  category         FILE_CATEGORY
  fileCategory     file_categories? @relation(fields: [fileCategorySlug], references: [slug], onDelete: Cascade)
  authorId         Int
  author           user             @relation(fields: [authorId], references: [id])
  createdAt        DateTime         @default(now())
}

model user {
  id        Int       @id @default(autoincrement())
  username  String    @unique(map: "User_username_key")
  fullName  String
  password  String
  role      user_role @default(USER)
  createdAt DateTime  @default(now())

  category category[]

  image files[]
}

enum user_role {
  USER
  ADMIN
}

model insight_mother {
  id        Int      @id @default(autoincrement())
  keyword   String   @db.LongText
  explain   String   @db.LongText
  solution  String   @db.LongText
  createdAt DateTime @default(now())
}

enum CATEGORY {
  CUSTOMER_ANSWER
}

model category {
  id              Int      @id @default(autoincrement())
  keyword         String   @db.LongText
  customer_status String?  @db.LongText
  content         String   @db.LongText
  authorId        Int
  author          user     @relation(fields: [authorId], references: [id])
  createdAt       DateTime @default(now())
  category        CATEGORY

}

model file_categories {
  id        Int           @id @default(autoincrement())
  title     String
  slug      String        @unique
  category  FILE_CATEGORY
  order     Int           @default(0)
  createdAt DateTime      @default(now())

  files files[]
}

enum PROPOSAL_STATUS {
  PENDING
  APPROVED
}

model customers {
  id        Int      @id @default(autoincrement())
  province  String
  district  String?
  ward      String?
  address   String?
  fullName  String
  job       String?
  createdAt DateTime @default(now())
}

model solutions {
  id        Int      @id @default(autoincrement())
  keyword   String   @db.LongText
  content   String   @db.LongText
  createdAt DateTime @default(now())
}

model confirms {
  id        Int      @id @default(autoincrement())
  keyword   String   @db.LongText
  content   String   @db.LongText
  createdAt DateTime @default(now())
}

enum CUSTOMER_INSIGHT_AGE {
  UNDER_30
  FROM_30_TO_45
  ABOVE_45
}

enum CUSTOMER_INSIGHT_TIME {
  SINCE_CHILDHOOD
  SINCE_PUBERTY
  AFTER_GIVING_BIRTH
  PERIMENOPAUSE
}

model customer_insight {
  id             Int                   @id @default(autoincrement())
  age            CUSTOMER_INSIGHT_AGE
  time           CUSTOMER_INSIGHT_TIME
  customerStatus String                @db.LongText
  conclude       String                @db.LongText
  solution       String                @db.LongText
  createdAt      DateTime              @default(now())

  @@unique([age, time], name: "unique_age_time")
}
