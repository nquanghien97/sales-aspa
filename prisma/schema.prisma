generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ImageCategory {
  salesPolicy
  products
  productDocuments
  feedbacks
}

enum TypeFile {
  image
  video
  pdf
}

model files {
  id        Int           @id @default(autoincrement())
  url       String
  category  ImageCategory
  type      TypeFile?
  imageName String
  authorId  Int
  author    user          @relation(fields: [authorId], references: [id])
  createdAt DateTime      @default(now())
}

model user {
  id        Int       @id @default(autoincrement())
  username  String    @unique(map: "User_username_key")
  fullName  String
  password  String
  role      user_role @default(USER)
  createdAt DateTime  @default(now())

  insight_mother insight_mother[]

  image files[]

  handle_rejection handle_rejection[]

  proposal proposal[]
}

enum user_role {
  USER
  ADMIN
}

model insight_mother {
  id        Int      @id @default(autoincrement())
  keyword   String
  content   String   @db.LongText
  authorId  Int
  author    user     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

model handle_rejection {
  id        Int      @id @default(autoincrement())
  keyword   String
  content   String   @db.LongText
  authorId  Int
  author    user     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}

enum CATEGORY_PROPOSAL {
  INSIGHT_MOTHER
  HANDLE_REJECTION
}

model proposal {
  id        Int               @id @default(autoincrement())
  keyword   String
  authorId  Int
  author    user              @relation(fields: [authorId], references: [id])
  category  CATEGORY_PROPOSAL
  createdAt DateTime          @default(now())

  proposalCategory proposal_category?
}

model proposal_category {
  id         Int      @id @default(autoincrement())
  proposalId Int      @unique
  proposal   proposal @relation(fields: [proposalId], references: [id])

  categoryId   Int
  categoryType CATEGORY_PROPOSAL
}
